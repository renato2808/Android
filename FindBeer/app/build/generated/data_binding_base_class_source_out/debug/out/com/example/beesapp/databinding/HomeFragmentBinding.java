// Generated by view binder compiler. Do not edit!
package com.example.beesapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.SearchView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.beesapp.R;
import com.google.android.material.appbar.AppBarLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class HomeFragmentBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppBarLayout appBarLayout;

  @NonNull
  public final SearchView brewerySearch;

  @NonNull
  public final LinearLayout headLayout;

  @NonNull
  public final LinearLayout label;

  @NonNull
  public final LinearLayout labelBrewery;

  @NonNull
  public final LinearLayout labelNoneTerm;

  @NonNull
  public final RecyclerView recyclerView;

  private HomeFragmentBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppBarLayout appBarLayout, @NonNull SearchView brewerySearch,
      @NonNull LinearLayout headLayout, @NonNull LinearLayout label,
      @NonNull LinearLayout labelBrewery, @NonNull LinearLayout labelNoneTerm,
      @NonNull RecyclerView recyclerView) {
    this.rootView = rootView;
    this.appBarLayout = appBarLayout;
    this.brewerySearch = brewerySearch;
    this.headLayout = headLayout;
    this.label = label;
    this.labelBrewery = labelBrewery;
    this.labelNoneTerm = labelNoneTerm;
    this.recyclerView = recyclerView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static HomeFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static HomeFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.home_fragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static HomeFragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appBarLayout;
      AppBarLayout appBarLayout = ViewBindings.findChildViewById(rootView, id);
      if (appBarLayout == null) {
        break missingId;
      }

      id = R.id.brewerySearch;
      SearchView brewerySearch = ViewBindings.findChildViewById(rootView, id);
      if (brewerySearch == null) {
        break missingId;
      }

      id = R.id.headLayout;
      LinearLayout headLayout = ViewBindings.findChildViewById(rootView, id);
      if (headLayout == null) {
        break missingId;
      }

      id = R.id.label;
      LinearLayout label = ViewBindings.findChildViewById(rootView, id);
      if (label == null) {
        break missingId;
      }

      id = R.id.labelBrewery;
      LinearLayout labelBrewery = ViewBindings.findChildViewById(rootView, id);
      if (labelBrewery == null) {
        break missingId;
      }

      id = R.id.labelNoneTerm;
      LinearLayout labelNoneTerm = ViewBindings.findChildViewById(rootView, id);
      if (labelNoneTerm == null) {
        break missingId;
      }

      id = R.id.recyclerView;
      RecyclerView recyclerView = ViewBindings.findChildViewById(rootView, id);
      if (recyclerView == null) {
        break missingId;
      }

      return new HomeFragmentBinding((ConstraintLayout) rootView, appBarLayout, brewerySearch,
          headLayout, label, labelBrewery, labelNoneTerm, recyclerView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
